#include<stdio.h>
#include<stdlib.h>
#include<conio.h>
struct node
{
	int c[3];
	int f[3],r[3];
	int *p[3];
};
void halfnode(struct node *a,int p)
{
	int i,k=0;
	int *p1=(int *)malloc(sizeof(int)*(a->c[p]/2));
		for(i=a->f[p];i!=a->r[p];(i==a->c[p]-1?i=0:i++))
			p1[k++]=a->p[p][i];
			p1[k++]=a->p[p][i];
			a->f[p]=0;
		    a->r[p]=k;
			free(a->p[p]);
			a->p[p]=p1;
			a->c[p]/=2;
}
void doublenode(struct node *a,int p)
{
	int i,k=0;
	int *p1=(int *)malloc(sizeof(int)*a->c[p]*2);
		for(i=a->f[p];i!=a->r[p];(i==a->c[p]-1?i=0:i++))
			p1[k++]=a->p[p][i];
			p1[k++]=a->p[p][i];
			a->f[p]=0;
		a->r[p]=k;
			free(a->p[p]);
			a->p[p]=p1;
			a->c[p]*=2;
		
	
}
struct node* createArray(int c)
{
	struct node *a;
	a=(struct node*)malloc(sizeof(struct node));
	for(int i=0;i<3;i++){
		a->c[i]=c;
	a->f[i]=a->r[i]=-1;
	a->p[i]=(int*)malloc(sizeof(int)*c);
     }    
}
void insertion(struct node *a,int d,int p)
{
	if((a->r[p]==a->c[p]-1&&a->f[p]==0)||(a->r[p]+1==a->f[p]))
	{
		doublenode(a,p);
		a->p[p][a->r[p]]=d;
	}
	else if(a->r[p]==a->c[p]-1){
	a->r[p]=0;
	a->p[p][a->r[p]]=d;
    }
    else if(a->r[p]==-1){
    a->r[p]=a->f[p]=0;
    a->p[p][a->r[p]]=d;
     }
     else
     {
     	a->r[p]++;
     	a->p[p][a->r[p]]=d;
	 }
}
int menu()
{
    int choice;
    printf("\n1. Insert");
    printf("\n2. Delete");
    printf("\n3. Exit");
    printf("\n\nEnter your choice");
    scanf("%d",&choice);
    return(choice);
}
void deletion(struct node *a)
{
	int i;
	for( i=0;i<3;i++)
	{
		if(a->f[i]!=-1)
		break;
	}
	if(i==3)
	printf("empty");
	else if(a->f[i]==a->r[i])
	a->f[i]=a->r[i]=-1;	
	else if(a->f[i]==a->c[i]-1)
	a->f[i]=0;
	else
	a->f[i]++;
	if((a->r[i]==a->c[i]-1&&a->f[i]==a->c[i]/2)||(a->f[i]==a->c[i]-1&&a->r[i]==a->c[i]/2))
	halfnode(a,i);
	
}
void view(struct node *a)
{
	int i,j;
	for( i=0;i<3;i++)
	{
		if(a->f[i]!=-1)
		break;
	}
	if(i==3)
	printf("empty");
	else
	{
		for(i=0;i<3;i++)
		{
			for(j=a->f[i];j!=a->r[i];(j==a->c[i]-1?j=0:j++))
			printf("%d ",a->p[i][j]);
			if(a->f[i]!=-1){
			printf("%d cap-%d",a->p[i][j],a->c[i]);
			printf("\n");}
		}
	}
}
int main()
{
	struct node *a;
	int data,priority;
	a=createArray(5);
	while(1)
    {
        system("cls");
       view(a);
        switch(menu())
        {
       case 1:
            printf("Enter a number to add in the queue");
            scanf("%d",&data);
             printf("\nEnter a pririoty of element");
            scanf("%d",&priority);
            insertion(a,data,priority);
            break;
       case 2:
            deletion(a);
            break;
       case 3:
            printf("Thank You, press any key to exit");
           getch();
           exit(0);
       default:
        printf("Invalid choice, try again");

        }
        getch();
    }

}
