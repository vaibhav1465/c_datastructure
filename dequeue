#include<stdio.h>
#include<stdlib.h>
#include<conio.h>
struct node
{
 int c;
 int h,t;
 int *p;	
};
struct node* createQueue(int cap)
{
    struct node *Q;
    Q=(struct node*)malloc(sizeof(struct node));
    Q->c=cap;
    Q->h=-1;
    Q->t=0;
    Q->p=(int*)malloc(sizeof(int)*cap);
    return Q;
}
void inserth(struct node *q,int d)
{
	if((q->h==q->t+1)||(q->h==0&&q->t==q->c-1))
	printf("Overflow");
	else if(q->h==-1)
	{
		q->h++;
		q->p[q->h]=d;
	}
	else if(q->h==0)
	{
		q->h=q->c-1;
		q->p[q->h]=d;
	}
	else
	{
		q->h--;
		q->p[q->h]=d;
	}
}
void insertt(struct node *q,int d)
{
	if(q->h==q->t+1)
	printf("Overflow");
	else
	{
		q->t++;
		q->p[q->t]=d;
	}
}
void delh(struct node *q)
{
	if(q->h==-1)
	printf("\nUnderflow");
	else if(q->h==q->c-1)
	q->h=0;
	else if(q->h==0)
	q->h--;
	else
	q->h++;
}
void delt(struct node *q)
{
	if(q->t==0)
	printf("\nUnderflow");
	else
	q->t--;
}
void viewQueue(struct node *q)
{
	int i;
	if(q->h==-1&&q->t==0)
	printf("Empty");
	else
	{
		if(q->h!=-1)
		printf("%d ",q->p[0]);
		for(i=1;i<=q->t;i++)
		printf("%d ",q->p[i]);
		if(q->h>0)
		for(i=q->h;i>0,i<=q->c-1;i++)
		printf("%d ",q->p[i]);
		
	}
}
int menu()
{
    int choice;
    printf("\n1. Insert");
    printf("\n2. Delete");
    printf("\n3. Exit");
    printf("\n\nEnter your choice");
    scanf("%d",&choice);
    return(choice);
}
int main()
{
    struct node *Q=NULL;
    int data,p;
    Q=createQueue(5);
    while(1)
    {
        system("cls");
        viewQueue(Q);
        switch(menu())
        {
       case 1:
            printf("Enter a number to add in the queue");
            scanf("%d",&data);
            printf("Press 1 for head and 2 for tail");
            scanf("%d",&p);
            if(p==1)
            inserth(Q,data);
            else
            insertt(Q,data);
            break;
       case 2:
            printf("Press 1 for head and 2 for tail");
            scanf("%d",&p);
            if(p==1)
            delh(Q);
            else
            delt(Q);
            break;
       case 3:
            printf("Thank You, press any key to exit");
           getch();
           exit(0);
       default:
        printf("Invalid choice, try again");

        }
        getch();
    }

}
